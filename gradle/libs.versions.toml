[versions]

##### Dependency versions #####

#AppCompat
appCompat = '1.7.0-alpha03'

#Chucker
chucker = '4.0.0'

#Coil
coil = '2.6.0'

#Compose
activity = '1.8.2'
compiler = '1.5.10'
composeCore = '1.6.3'
material3 = '1.2.1'

#Coroutines
coroutines = '1.8.0'

#DataStore
dataStore = '1.1.0-beta02'

#Quality checking
#Detekt
detekt = '1.23.5'

#Ktlint
ktlint = '1.2.1'
ktlintPlugin = '12.1.0'

#Gradle
gradle = '8.3.0'

#Koin
koin = '3.5.3'

#Kotlin
kotlin = '1.9.23'

#KSP
ksp = '1.9.23-1.0.19'

#Ktor
ktor = '2.3.7'

#Ktx
ktxCore = '1.13.0-alpha05'

#LeakCanary
leakCanary = '2.13'

#Lifecycle
lifecycle = '2.7.0'

#Material design
materialDesign = '1.11.0'

#Room
room = '2.6.1'

#Views/ViewGroups
#ConstraintLayout
constraintLayout = '2.1.4'

#RecyclerView
recyclerView = '1.3.2'

##### Test dependency versions #####

#Arch
archTest = '2.2.0'

#Core
testCore = '1.6.0-alpha05'

#Jacoco
jacoco = '0.8.11'

#JUnit
junit = '1.2.0-alpha03'

#Kotest
kotest = '5.8.0'

#Mockk
mockkVersion = '1.13.9'

#Robolectric
robolectric = '4.11.1'

#Runner
testRunner = '1.6.0-alpha06'

##### Libraries #####

[libraries]

#APIConnector
client = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }
contentNegotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }

#AppCompat
appCompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appCompat" }

#Chucker
debugChucker = { group = "com.github.chuckerteam.chucker", name = "library", version.ref = "chucker" }
releaseChucker = { group = "com.github.chuckerteam.chucker", name = "library-no-op", version.ref = "chucker" }

#Coil
coil = { group = "io.coil-kt", name = "coil", version.ref = "coil" }

#Compose
activityCompose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity" }
animationCompose = { group = "androidx.compose.animation", name = "animation", version.ref = "composeCore" }
foundationCompose = { group = "androidx.compose.foundation", name = "foundation", version.ref = "composeCore" }
lifecycleCompose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
material3Compose = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
materialIconsCoreCompose = { group = "androidx.compose.material", name = "material-icons-core", version.ref = "composeCore" }
materialIconsExtendedCompose = { group = "androidx.compose.material", name = "material-icons-extended", version.ref = "composeCore" }
runtimeAndroidCompose = { group = "androidx.compose.runtime", name = "runtime-android", version.ref = "composeCore" }
runtimeCompose = { group = "androidx.compose.runtime", name = "runtime", version.ref = "composeCore" }
uiCompose = { group = "androidx.compose.ui", name = "ui", version.ref = "composeCore" }
uiToolingCompose = { group = "androidx.compose.ui", name = "ui-tooling", version.ref = "composeCore" }
uiToolingPreviewCompose = { group = "androidx.compose.ui", name = "ui-tooling-preview", version.ref = "composeCore" }

#Core
ktxCore = { group = "androidx.core", name = "core-ktx", version.ref = "ktxCore" }

#DataStore
dataStorePreferences = { group = "androidx.datastore", name = "datastore-preferences", version.ref = "dataStore" }

#Koin
koin = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }

#Leak canary
leakCanary = { group = "com.squareup.leakcanary", name = "leakcanary-android", version.ref = "leakCanary" }

#Lifecycle section
lifecycleRuntimeKtx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleViewmodelKtx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle" }

#Material design
materialDesign = { group = "com.google.android.material", name = "material", version.ref = "materialDesign" }

#Room
room = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
roomCompiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
roomKtx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }

#Views/ViewGroups
constraintLayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintLayout" }
recyclerView = { group = "androidx.recyclerview", name = "recyclerview", version.ref = "recyclerView" }

##### Testing Section #####
#JVM
#TestCore
archTest = { group = "androidx.arch.core", name = "core-testing", version.ref = "archTest" }
testCore = { group = "androidx.test", name = "core-ktx", version.ref = "testCore" }
testRunner = { group = "androidx.test", name = "runner", version.ref = "testRunner" }

#Coroutines
coroutinesTest = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }

#Jacoco
jacoco = { group = "org.jacoco", name = "org.jacoco.core", version.ref = "jacoco" }

#Koin
koinTest = { group = "io.insert-koin", name = "koin-android-test", version.ref = "koin" }

#Kotest
kotestCore = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotestProperty = { group = "io.kotest", name = "kotest-property", version.ref = "kotest" }
kotestRunner = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }

#MockK
mockkAgent = { group = "io.mockk", name = "mockk-agent", version.ref = "mockkVersion" }
mockkAndroid = { group = "io.mockk", name = "mockk-android", version.ref = "mockkVersion" }

#Robolectric
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }

# Instrumented/UI #

#Compose
composeTestJUnit4 = { group = "androidx.compose.ui", name = "ui-test-junit4", version.ref = "composeCore" }
composeTestManifest = { group = "androidx.compose.ui", name = "ui-test-manifest", version.ref = "composeCore" }

#JUnit
junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }
junitKtx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junit" }

##### Plugins #####

[plugins]
androidApplication = { id = "com.android.application", version.ref = "gradle" }
androidLibrary = { id = "com.android.library", version.ref = "gradle" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlinPlugin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintPlugin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

##### Bundles #####

[bundles]

apiConnection = [
    "client",
    "contentNegotiation",
    "core",
    "json",
    "logging",
    "serialization"
]

compose = [
    "activityCompose",
    "animationCompose",
    "foundationCompose",
    "lifecycleCompose",
    "material3Compose",
    "materialIconsCoreCompose",
    "materialIconsExtendedCompose",
    "runtimeAndroidCompose",
    "runtimeCompose",
    "uiCompose",
    "uiToolingCompose",
    "uiToolingPreviewCompose"
]

lifecycle = [
    "lifecycleRuntimeKtx",
    "lifecycleViewmodelKtx"
]

room = [
    "room",
    "roomKtx"
]

views = [
    "constraintLayout",
    "recyclerView"
]

# Test Bundles #

junit = [
    "junit",
    "junitKtx"
]

kotest = [
    "kotestCore",
    "kotestProperty",
    "kotestRunner"
]

mockk = [
    "mockkAgent",
    "mockkAndroid"
]

testCore = [
    "archTest",
    "testCore",
    "testRunner"
]