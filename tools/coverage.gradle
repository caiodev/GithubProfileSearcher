apply plugin: 'jacoco'

jacoco {
    toolVersion = dep.versions.jacoco.get()
    getReportsDirectory().set(file("$layout.buildDirectory/reports/jacoco"))
}

tasks.withType(Test).configureEach {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

tasks.register('jacocoReport', JacocoReport) {
    dependsOn['testDebugUnitTest']

    def coverageSourceDirs = ["src/main/java"]

    def fileFilter = [
            '**/*Activity.*',
            '**/*Adapter.*',
            '**/BuildConfig.*',
            '**/*Constants.*',
            '**/Manifest*.*',
            '**/R.class',
            '**/R$*.class',
            '**/*Test*.*',
            '**/*ViewHolder*.*',
            'android/**/*.*',
            'androidx/**/*.*',
            '**/*init/**/*.*',
            '**/*model/**/*.*',
            '**/*view/**/*.*',
            '**/*imageLoading/**/*.*',
            '**/*di/**/*.*',
            '**/*liveEvent/**/*.*',
            '**/*customViews/**/*.*',
            '**/*service/**/*.*',
            '**/*network/**/*.*',
            '**/ViewKt**',
            '**/AppDatabase**'
    ]

    def javaClasses = fileTree(dir: "${layout.buildDirectory}/intermediates/classes/debug", excludes: fileFilter)
    def kotlinClasses = fileTree(dir: "$layout.buildDirectory/tmp/kotlin-classes/debug", excludes: fileFilter)

    classDirectories.setFrom files([javaClasses, kotlinClasses])
    additionalSourceDirs.setFrom files(coverageSourceDirs)

    sourceDirectories.setFrom files(["$project.projectDir/src/main/java"])

    executionData.setFrom fileTree(dir: project.projectDir, includes: ["**/*.exec"])

    reports { html.required = true }
}