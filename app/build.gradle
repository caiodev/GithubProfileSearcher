import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias dep.plugins.androidApplication
    alias dep.plugins.kotlinPlugin
    alias dep.plugins.serialization
}

apply from: "$project.rootDir/flavors/flavors.gradle"

android {
    compileSdk dep.versions.compileSdk.get().toInteger()
    defaultConfig {
        applicationId "githubprofilesearcher.caiodev.com.br.githubprofilesearcher"
        minSdkVersion dep.versions.minSdk.get()
        targetSdkVersion dep.versions.targetSdk.get()
        versionCode dep.versions.versionCode.get().toInteger()
        versionName dep.versions.versionName.get()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }

        release {
            applicationIdSuffix ".release"
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_20
        targetCompatibility JavaVersion.VERSION_20
    }

    buildFeatures {
        buildConfig true
    }

    kotlin {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_20)
        }
    }

    packagingOptions {
        resources {
            excludes += [
                    '/META-INF/{AL2.0,LGPL2.1,LICENSE.md,LICENSE-notice.md,licenses/ASM}',
                    'win32-x86{/attach_hotspot_windows.dll,-64/attach_hotspot_windows.dll}'
            ]
        }
    }

    testOptions {
        unitTests.all { useJUnitPlatform() }
    }

    namespace 'githubprofilesearcher.caiodev.com.br.githubprofilesearcher'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':modules:common:core') because 'Core Module'
    implementation project(':modules:common:ui:ui') because 'UI Module'
    implementation project(':modules:features:profile') because 'Profile Module'

    debugImplementation dep.leakCanary
}